{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,gBAAiBF,SAASC,cAAc,kBACxCE,UAAWH,SAASC,cAAc,iBAClCG,OAAQJ,SAASC,cAAc,oBAE7BI,EAAc,EAElB,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBH,E,IAIPP,EAAKC,OAAOiB,iBAAiB,UAE7B,SAAkCC,GAChCA,EAAEC,iBACFb,EAAcc,OAAOrB,EAAKI,gBAAgBkB,OAC1C,IAAK,IAAIC,EAAI,EAAGA,GAAKvB,EAAKM,OAAOgB,MAAOC,GAAK,EAC3Cf,EAAce,EAAGhB,GACdiB,MAAK,SAAAC,G,IAAGhB,EAAQgB,EAARhB,SAAUC,EAAKe,EAALf,MACjBgB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAwCC,OAAfpB,EAAS,QAAYoB,OAANnB,EAAM,M,IAGjDoB,OAAM,SAAAL,G,IAAGhB,EAAQgB,EAARhB,SAAUC,EAAKe,EAALf,MAClBgB,EAAA5B,GAAS6B,OAAOI,QACd,sBAAqCF,OAAfpB,EAAS,QAAYoB,OAANnB,EAAM,M,IAGjDH,EAAcc,OAAOd,GAAec,OAAOrB,EAAKK,UAAUiB,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  firstDelayField: document.querySelector('[name=\"delay\"]'),\n  delayStep: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n};\nlet promiseTime = 0;\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, promiseTime);\n  });\n}\n\nrefs.formEl.addEventListener('submit', onBtnClickCreatePromises);\n\nfunction onBtnClickCreatePromises(e) {\n  e.preventDefault();\n  promiseTime = Number(refs.firstDelayField.value);\n  for (let i = 1; i <= refs.amount.value; i += 1) {\n    createPromise(i, promiseTime)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    promiseTime = Number(promiseTime) + Number(refs.delayStep.value);\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","formEl","document","querySelector","firstDelayField","delayStep","amount","$ce04d3a99e08e73b$var$promiseTime","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","Number","value","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.626c7033.js.map"}